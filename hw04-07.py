"""
Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
При вызове функции должен создаваться объект-генератор.
Функция должна вызываться следующим образом: for el in fibo_gen().
Функция отвечает за получение факториала числа, а в цикле необходимо выводить только первые 15 чисел.
Подсказка: факториал числа n — произведение чисел от 1 до n. Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.
"""
from itertools import count


from functools import reduce

# Вариант решения 1: сделаны две функции: первая создает объект-генератор, вторая (lambda) получает факториал
# сгенерированного первой функцией числа.

def fibo_gen():
    for el in count(1):
        yield el

for el in fibo_gen():
    if el <= 15:
        print(reduce(lambda x, y: x * y, [el for el in range(1, el+1)]))
    else:
        break
# Вариант решения 2: фукция fibo-gen2 генерирует последовательность, представляющую собой факториалы числового ряда
# от 1 до бесконечности. 1!, 2!, 3!...

def fibo_gen2():
    for el in count(1):
        yield (reduce(lambda x, y: x * y, [el for el in range(1, el+1)]))

itr = 0
for el in fibo_gen2():
    itr += 1
    if itr <= 15:
        print(el)
    else:
        break
